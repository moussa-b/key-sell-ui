name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get and update version in environment.ts
        id: version
        run: |
          # Extract version from environment.ts
          VERSION=$(grep "version:" src/environments/environment.ts | awk -F"'" '{print $2}')
          DATE_PART=$(echo $VERSION | cut -d'.' -f1-3)  # Extract yyyy.mm.dd
          LAST_PUSH=$(echo $VERSION | cut -d'.' -f4)    # Extract last 2 digits

          # Get current date in yyyy.mm.dd format
          TODAY=$(date +'%Y.%m.%d')

          # If today is different from the stored date, reset last push counter
          if [ "$TODAY" != "$DATE_PART" ]; then
            NEW_VERSION="$TODAY.01"
          else
            NEW_PUSH_NUMBER=$(printf "%02d" $((10#$LAST_PUSH + 1)))  # Increment last push count
            NEW_VERSION="$DATE_PART.$NEW_PUSH_NUMBER"
          fi

          # Update environment.ts with new version
          sed -i "s/version: '.*'/version: '$NEW_VERSION'/" src/environments/environment.ts

          # Output new version for later steps
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "Updated version: $NEW_VERSION"

      - name: Commit updated environment.ts
        env:
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
          GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
        run: |
          git config --global user.email "$GIT_USER_EMAIL"
          git config --global user.name "$GIT_USER_NAME"
          git add src/environments/environment.ts
          git commit -m "Bump version to ${{ env.NEW_VERSION }}"
          git push origin main
